-- Generated by Oracle SQL Developer Data Modeler 24.3.0.240.1210
--   at:        2024-12-07 17:54:48 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

-- Pentru stergerea tabelelor !!
--DROP TABLE CATEGORII CASCADE CONSTRAINTS;
--DROP TABLE CLIENTI CASCADE CONSTRAINTS;
--DROP TABLE DETALII_CLIENTI CASCADE CONSTRAINTS;
--DROP TABLE PRODUSE CASCADE CONSTRAINTS;
--DROP TABLE PRODUSE_VANZARI CASCADE CONSTRAINTS;
--DROP TABLE VANZARI CASCADE CONSTRAINTS;

CREATE TABLE categorii (
    id_categorie NUMBER(5)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 INCREMENT BY 2 NOCACHE ORDER )
    NOT NULL,
    denumire     VARCHAR2(20) NOT NULL
)
LOGGING;

ALTER TABLE categorii
    ADD CONSTRAINT categorii_denumire_ck CHECK ( length(denumire) > 1 );

ALTER TABLE categorii ADD CONSTRAINT categorii_pk PRIMARY KEY ( id_categorie );

CREATE TABLE clienti (
    id_client NUMBER(5)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 500 NOCACHE ORDER )
    NOT NULL,
    nume      VARCHAR2(25) NOT NULL,
    prenume   VARCHAR2(25) NOT NULL
)
LOGGING;

ALTER TABLE clienti
    ADD CONSTRAINT clienti_nume_ck
        CHECK ( length(nume) > 1
                AND REGEXP_LIKE ( nume,
                                  '^[A-Za-z\-]+$' ) );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_prenume_ck
        CHECK ( length(prenume) > 1
                AND REGEXP_LIKE ( nume,
                                  '^[A-Za-z\-]+$' ) );

ALTER TABLE clienti ADD CONSTRAINT clienti_pk PRIMARY KEY ( id_client );

ALTER TABLE clienti ADD CONSTRAINT clienti_nume_uk UNIQUE ( nume,
                                                            prenume );

CREATE TABLE detalii_clienti (
    telefon            VARCHAR2(10) NOT NULL,
    email              VARCHAR2(25) NOT NULL,
    adresa             VARCHAR2(40),
    data_inregistrarii DATE NOT NULL,
    id_client          NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE detalii_clienti
    ADD CONSTRAINT detalii_clienti_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                                    '^[0-9]{10}$' ) );

ALTER TABLE detalii_clienti
    ADD CONSTRAINT detalii_clienti_email_ck CHECK ( REGEXP_LIKE ( email,
                                                                  '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

CREATE UNIQUE INDEX detalii_clienti__idx ON
    detalii_clienti (
        id_client
    ASC )
        LOGGING;

ALTER TABLE detalii_clienti ADD CONSTRAINT detalii_clienti_email_uk UNIQUE ( email );

CREATE TABLE produse (
    id_produs    NUMBER(5)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 200 NOCACHE ORDER )
    NOT NULL,
    nume         VARCHAR2(30) NOT NULL,
    pret         NUMBER(5) NOT NULL,
    stoc         NUMBER(5) NOT NULL,
    id_categorie NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE produse
    ADD CONSTRAINT produse_nume_ck CHECK ( length(nume) > 1 );

ALTER TABLE produse ADD CONSTRAINT produse_pret_ck CHECK ( pret > 0 );

ALTER TABLE produse ADD CONSTRAINT produse_stoc_ck CHECK ( stoc >= 0 );

ALTER TABLE produse ADD CONSTRAINT produse_pk PRIMARY KEY ( id_produs );

ALTER TABLE produse ADD CONSTRAINT produse_nume UNIQUE ( nume );

CREATE TABLE produse_vanzari (
    id_produs  NUMBER(5) NOT NULL,
    id_vanzare NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE produse_vanzari ADD CONSTRAINT produse_vanzari_pk PRIMARY KEY ( id_produs,
                                                                            id_vanzare );

CREATE TABLE vanzari (
    id_vanzare   NUMBER(5)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1000 INCREMENT BY 5 NOCACHE ORDER )
    NOT NULL,
    data_vanzare DATE NOT NULL,
    id_client    NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE vanzari ADD CONSTRAINT vanzari_pk PRIMARY KEY ( id_vanzare );

ALTER TABLE produse
    ADD CONSTRAINT categorii_produse_fk
        FOREIGN KEY ( id_categorie )
            REFERENCES categorii ( id_categorie )
            NOT DEFERRABLE;

ALTER TABLE detalii_clienti
    ADD CONSTRAINT clienti_detalii_clienti_fk
        FOREIGN KEY ( id_client )
            REFERENCES clienti ( id_client )
            NOT DEFERRABLE;

ALTER TABLE vanzari
    ADD CONSTRAINT clienti_vanzari_fk
        FOREIGN KEY ( id_client )
            REFERENCES clienti ( id_client )
            NOT DEFERRABLE;

ALTER TABLE produse_vanzari
    ADD CONSTRAINT produse_vanzari_produse_fk
        FOREIGN KEY ( id_produs )
            REFERENCES produse ( id_produs )
            NOT DEFERRABLE;

ALTER TABLE produse_vanzari
    ADD CONSTRAINT produse_vanzari_vanzari_fk
        FOREIGN KEY ( id_vanzare )
            REFERENCES vanzari ( id_vanzare )
            NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_detalii_clientii_BRIU 
    BEFORE INSERT OR UPDATE ON DETALII_CLIENTI 
    FOR EACH ROW 
BEGIN
	IF( :new.data_inregistrarii > SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_inregistrarii, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mica decat data curenta.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_vanzari_BRIU 
    BEFORE INSERT OR UPDATE ON VANZARI 
    FOR EACH ROW 
BEGIN
	IF( :new.data_vanzare > SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_vanzare, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mica decat data curenta.' );
	END IF;
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             1
-- ALTER TABLE                             21
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
